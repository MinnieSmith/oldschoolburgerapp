[{"/Users/minnie/burgerapp/burger/src/index.js":"1","/Users/minnie/burgerapp/burger/src/reportWebVitals.js":"2","/Users/minnie/burgerapp/burger/src/App.js":"3","/Users/minnie/burgerapp/burger/src/components/Layout/Layout.js":"4","/Users/minnie/burgerapp/burger/src/ containers/BurgerBuilder/BurgerBuilder.js":"5","/Users/minnie/burgerapp/burger/src/components/Burger/Burger.js":"6","/Users/minnie/burgerapp/burger/src/hoc/Aux.js":"7","/Users/minnie/burgerapp/burger/src/components/UI/Modal/Modal.js":"8","/Users/minnie/burgerapp/burger/src/components/Navigation/Toolbar/Toolbar.js":"9","/Users/minnie/burgerapp/burger/src/components/Burger/OderSummary/OrderSummary.js":"10","/Users/minnie/burgerapp/burger/src/components/Burger/BuildControls/BuildControls.js":"11","/Users/minnie/burgerapp/burger/src/components/UI/Backdrop/Backdrop.js":"12","/Users/minnie/burgerapp/burger/src/components/UI/Button/Button.js":"13","/Users/minnie/burgerapp/burger/src/components/Burger/BurgerIngredient/BurgerIngredient.js":"14","/Users/minnie/burgerapp/burger/src/components/Burger/BuildControls/Control/Control.js":"15","/Users/minnie/burgerapp/burger/src/components/Logo/Logo.js":"16","/Users/minnie/burgerapp/burger/src/components/Navigation/NavigationItem/NavigationItem.js":"17","/Users/minnie/burgerapp/burger/src/components/Navigation/NavigationItem/Item/Item.js":"18","/Users/minnie/burgerapp/burger/src/components/Navigation/SideDrawer/SideDrawer.js":"19","/Users/minnie/burgerapp/burger/src/components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js":"20","/Users/minnie/burgerapp/burger/src/axios-orders.js":"21","/Users/minnie/burgerapp/burger/src/components/UI/Spinner/Spinner.js":"22","/Users/minnie/burgerapp/burger/src/hoc/withErrorHandler/withErrorHandler.js":"23","/Users/minnie/burgerapp/burger/src/components/Order/CheckoutSummary.js":"24","/Users/minnie/burgerapp/burger/src/ containers/Checkout/Checkout.js":"25","/Users/minnie/burgerapp/burger/src/ containers/Checkout/ContactData/ContactData.js":"26","/Users/minnie/burgerapp/burger/src/ containers/Orders/Orders.js":"27","/Users/minnie/burgerapp/burger/src/components/Order/Order.js":"28","/Users/minnie/burgerapp/burger/src/components/UI/Input/Input.js":"29","/Users/minnie/burgerapp/burger/src/store/actions/index.js":"30","/Users/minnie/burgerapp/burger/src/store/actions/order.js":"31","/Users/minnie/burgerapp/burger/src/store/actions/burgerBuilder.js":"32","/Users/minnie/burgerapp/burger/src/store/actions/actionsTypes.js":"33","/Users/minnie/burgerapp/burger/src/store/reducers/burgerBuilder.js":"34","/Users/minnie/burgerapp/burger/src/store/reducers/order.js":"35","/Users/minnie/burgerapp/burger/src/store/utility.js":"36","/Users/minnie/burgerapp/burger/src/ containers/Auth/Auth.js":"37","/Users/minnie/burgerapp/burger/src/store/actions/auth.js":"38","/Users/minnie/burgerapp/burger/src/store/reducers/auth.js":"39"},{"size":1277,"mtime":1613667201606,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1611455811025,"results":"42","hashOfConfig":"41"},{"size":810,"mtime":1613484929355,"results":"43","hashOfConfig":"41"},{"size":1084,"mtime":1612265055278,"results":"44","hashOfConfig":"41"},{"size":4650,"mtime":1613410286550,"results":"45","hashOfConfig":"41"},{"size":1490,"mtime":1611476447293,"results":"46","hashOfConfig":"41"},{"size":59,"mtime":1611469929582,"results":"47","hashOfConfig":"41"},{"size":942,"mtime":1612432495766,"results":"48","hashOfConfig":"41"},{"size":574,"mtime":1611939605384,"results":"49","hashOfConfig":"41"},{"size":1012,"mtime":1613662306414,"results":"50","hashOfConfig":"41"},{"size":1092,"mtime":1611819371268,"results":"51","hashOfConfig":"41"},{"size":191,"mtime":1611672402632,"results":"52","hashOfConfig":"41"},{"size":255,"mtime":1613144785158,"results":"53","hashOfConfig":"41"},{"size":1178,"mtime":1611475394005,"results":"54","hashOfConfig":"41"},{"size":431,"mtime":1611651482554,"results":"55","hashOfConfig":"41"},{"size":308,"mtime":1611838646572,"results":"56","hashOfConfig":"41"},{"size":373,"mtime":1613659997472,"results":"57","hashOfConfig":"41"},{"size":317,"mtime":1612882074872,"results":"58","hashOfConfig":"41"},{"size":808,"mtime":1611936981065,"results":"59","hashOfConfig":"41"},{"size":131,"mtime":1611939516812,"results":"60","hashOfConfig":"41"},{"size":164,"mtime":1612265345229,"results":"61","hashOfConfig":"41"},{"size":150,"mtime":1612274289744,"results":"62","hashOfConfig":"41"},{"size":1862,"mtime":1612453573903,"results":"63","hashOfConfig":"41"},{"size":722,"mtime":1613662420880,"results":"64","hashOfConfig":"41"},{"size":1868,"mtime":1613410619017,"results":"65","hashOfConfig":"41"},{"size":7193,"mtime":1613661188884,"results":"66","hashOfConfig":"41"},{"size":1268,"mtime":1613477597818,"results":"67","hashOfConfig":"41"},{"size":886,"mtime":1612886730912,"results":"68","hashOfConfig":"41"},{"size":1954,"mtime":1613143836280,"results":"69","hashOfConfig":"41"},{"size":216,"mtime":1613492371467,"results":"70","hashOfConfig":"41"},{"size":2269,"mtime":1613471706876,"results":"71","hashOfConfig":"41"},{"size":1074,"mtime":1613397348586,"results":"72","hashOfConfig":"41"},{"size":748,"mtime":1613492052132,"results":"73","hashOfConfig":"41"},{"size":2126,"mtime":1613485182187,"results":"74","hashOfConfig":"41"},{"size":1905,"mtime":1613479083673,"results":"75","hashOfConfig":"41"},{"size":138,"mtime":1613477649600,"results":"76","hashOfConfig":"41"},{"size":6275,"mtime":1613672058952,"results":"77","hashOfConfig":"41"},{"size":1286,"mtime":1613669120483,"results":"78","hashOfConfig":"41"},{"size":1079,"mtime":1613667630947,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mc2cw7",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/minnie/burgerapp/burger/src/index.js",[],"/Users/minnie/burgerapp/burger/src/reportWebVitals.js",[],["164","165"],"/Users/minnie/burgerapp/burger/src/App.js",[],"/Users/minnie/burgerapp/burger/src/components/Layout/Layout.js",[],"/Users/minnie/burgerapp/burger/src/ containers/BurgerBuilder/BurgerBuilder.js",[],"/Users/minnie/burgerapp/burger/src/components/Burger/Burger.js",["166"],"import { array } from 'prop-types';\nimport React from 'react';\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    /* since state in the burger builder is an object, we can't use \n       we can't use map instead we have to transform it into an array\n       using the keys method */\n    let transformedIngredients =Object.keys(props.ingredients)\n    .map(igKey => {\n        /*\n        Array creates an array with length (n)\n        This method creates an array of burger ingredients from an\n        object[the ingredients] of key[how many] value pairs\n        */\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n           return <BurgerIngredient key ={igKey +i} type ={igKey} />\n        });\n    })\n    /* reduce() is an array function that turns a 2D array into a single array\n    making it easier to determine whether it is empty */\n    .reduce((arr, el) => {\n        return arr.concat(el);\n    }, []);\n\n    //if the burger doesn't have any ingredients, there will be a message displayed\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start building your burger!</p>;\n    }\n\n    return (\n        <div className='Burger'>\n            <BurgerIngredient type=\"bread-top\"/>\n            {/* returns a function with {} */}\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default burger;","/Users/minnie/burgerapp/burger/src/hoc/Aux.js",[],"/Users/minnie/burgerapp/burger/src/components/UI/Modal/Modal.js",[],"/Users/minnie/burgerapp/burger/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/minnie/burgerapp/burger/src/components/Burger/OderSummary/OrderSummary.js",[],"/Users/minnie/burgerapp/burger/src/components/Burger/BuildControls/BuildControls.js",[],"/Users/minnie/burgerapp/burger/src/components/UI/Backdrop/Backdrop.js",[],"/Users/minnie/burgerapp/burger/src/components/UI/Button/Button.js",[],"/Users/minnie/burgerapp/burger/src/components/Burger/BurgerIngredient/BurgerIngredient.js",[],"/Users/minnie/burgerapp/burger/src/components/Burger/BuildControls/Control/Control.js",[],"/Users/minnie/burgerapp/burger/src/components/Logo/Logo.js",[],"/Users/minnie/burgerapp/burger/src/components/Navigation/NavigationItem/NavigationItem.js",[],"/Users/minnie/burgerapp/burger/src/components/Navigation/NavigationItem/Item/Item.js",[],"/Users/minnie/burgerapp/burger/src/components/Navigation/SideDrawer/SideDrawer.js",[],"/Users/minnie/burgerapp/burger/src/components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js",[],"/Users/minnie/burgerapp/burger/src/axios-orders.js",[],"/Users/minnie/burgerapp/burger/src/components/UI/Spinner/Spinner.js",[],"/Users/minnie/burgerapp/burger/src/hoc/withErrorHandler/withErrorHandler.js",[],"/Users/minnie/burgerapp/burger/src/components/Order/CheckoutSummary.js",[],"/Users/minnie/burgerapp/burger/src/ containers/Checkout/Checkout.js",["167","168"],"import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ContactData from './ContactData/ContactData';\nimport * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        //goBack goes back to the last page \n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />\n        \n        if (this.props.ings) {\n            const purchaseRedirect = this.props.purchased ? <Redirect to=\"/\"/>: null;\n            summary =\n\n                <div>\n                    {purchaseRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData}\n                    /*render manually renders the nested route and allows to pass\n                    ingredients and price in the contactData as a prop\n                    also because it is rendered manually, history needs to \n                    be pushed onto the ContactData component by copying in \n                    the props array*/\n                    />\n                </div>\n\n        }\n\n        return summary\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder. ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout);","/Users/minnie/burgerapp/burger/src/ containers/Checkout/ContactData/ContactData.js",["169"],"import React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            suburb: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Suburb'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            postcode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Postcode'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 4,\n                    maxLength: 4\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'pickup', displayValue: 'Pickup' },\n                        { value: 'delivery', displayValue: 'Delivery' }\n                    ]\n                },\n                value: 'pickup',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsvalid: false\n        }\n\n    /*because contactData ingreds props is in a form and by default the form\n    gets reloaded, we have to manual prevent the default */\n    orderHandler = (event) => {\n        event.preventDefault();\n        //Loops through the form to get the data\n        const formData = {};\n        for (let formElId in this.state.orderForm) {\n            formData[formElId] = this.state.orderForm[formElId].value;\n        }\n\n\n        const orderdocket = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n\n        this.props.onOrderBurger(orderdocket);\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            //trim removes whitespaces at beginning and end\n            //If the trimmed value is not an empty string, then isValid ==true \n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        //copies the pointer of the orderForm\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        //Actually creates a copy of the elements\n        //This step is essential so we don't change the original orderform\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        //checks the updated form for validity\n        updatedFormElement.valid = this.checkValidity(\n            updatedFormElement.value,\n            updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        // if any elements of the array is false, then it would set formIsValid to false and then it will make all the values false\n        let formIsValid = true;\n        for (let inputId in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputId].valid && formIsValid\n        }\n\n        this.setState({ orderForm: updatedOrderForm, formIsvalid: formIsValid });\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {/* Dynamically outputs elements in form  */}\n                {formElementsArray.map(El => (\n                    <Input\n                        key={El.id}\n                        elementType={El.config.elementType}\n                        elementConfig={El.config.elementConfig}\n                        value={El.config.value}\n                        invalid={!El.config.valid}\n                        shouldValidate={El.config.validation}\n                        touched={El.config.touched}\n                        //anon func () allows to pass args to inputChangedHandler\n                        //two way binding \n                        changed={(event) => this.inputChangedHandler(event, El.id)}\n                    ></Input>\n                ))}\n                <div>\n                    <Button btnType=\"Success\" disabled={!this.state.formIsvalid}>ORDER</Button>\n                </div>\n            </form>\n        );\n        if (this.props .loading) {\n            form = <Spinner />;\n        }\n        return (\n            <div className='ContactData'>\n                <p> Enter your contact details</p>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","/Users/minnie/burgerapp/burger/src/ containers/Orders/Orders.js",[],"/Users/minnie/burgerapp/burger/src/components/Order/Order.js",[],"/Users/minnie/burgerapp/burger/src/components/UI/Input/Input.js",[],"/Users/minnie/burgerapp/burger/src/store/actions/index.js",[],"/Users/minnie/burgerapp/burger/src/store/actions/order.js",["170"],"import order from '../../components/Order/Order';\nimport * as actionTypes from './actionsTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n}\n\nexport const purchaseBurger = (orderData) => {\n    return dispatch => {\n        /* wrapping purchaseBurgerStart with dispatch ensures that it gets \n        dispatched to the store*/\n        dispatch(purchaseBurgerStart());\n        /*for firebase, you pass in the node that you want to create with .json format and \n        and then name of the const which contains the data */\n        axios.post('/orders.json', orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrderSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDER_SUCCESS,\n        orders: orders\n    }\n};\n\nexport const fetchOrderFail = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDER_FAIL,\n        orders: orders\n    }\n};\n\nexport const fetchOrderStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDER_START\n    }\n};\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrderStart());\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchOrders = [];\n                for (let key in res.data) {\n                    fetchOrders.push({ ...res.data[key], \n                        id: key \n                    });\n                }\n                dispatch(fetchOrderSuccess(fetchOrders));\n                })\n            .catch(err => {\n                dispatch(fetchOrderFail(err)); \n\n            });\n    };\n\n};\n","/Users/minnie/burgerapp/burger/src/store/actions/burgerBuilder.js",[],"/Users/minnie/burgerapp/burger/src/store/actions/actionsTypes.js",[],"/Users/minnie/burgerapp/burger/src/store/reducers/burgerBuilder.js",["171"],"import { act } from 'react-dom/test-utils';\nimport * as actionTypes from '../actions/actionsTypes';\nimport {updateObject} from  '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 5.5,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 2.0,\n    cheese: 1.0,\n    meat: 4.0,\n    bacon: 2.50\n}; \n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 5.5,\n        error: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\n\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","/Users/minnie/burgerapp/burger/src/store/reducers/order.js",[],"/Users/minnie/burgerapp/burger/src/store/utility.js",[],"/Users/minnie/burgerapp/burger/src/ containers/Auth/Auth.js",[],"/Users/minnie/burgerapp/burger/src/store/actions/auth.js",[],"/Users/minnie/burgerapp/burger/src/store/reducers/auth.js",["172"],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":15},{"ruleId":"177","severity":1,"message":"181","line":6,"column":13,"nodeType":"179","messageId":"180","endLine":6,"endColumn":20},{"ruleId":"182","severity":1,"message":"183","line":51,"column":15,"nodeType":"184","messageId":"185","endLine":51,"endColumn":47,"fix":"186"},{"ruleId":"182","severity":1,"message":"187","line":194,"column":13,"nodeType":"184","messageId":"185","endLine":194,"endColumn":32,"fix":"188"},{"ruleId":"177","severity":1,"message":"189","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"190","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"191","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":28},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'array' is defined but never used.","Identifier","unusedVar","'actions' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property ingredients.","MemberExpression","unexpectedWhitespace",{"range":"194","text":"195"},"Unexpected whitespace before property loading.",{"range":"196","text":"195"},"'order' is defined but never used.","'act' is defined but never used.","'bindActionCreators' is defined but never used.","no-global-assign","no-unsafe-negation",[1752,1754],".",[6533,6535]]